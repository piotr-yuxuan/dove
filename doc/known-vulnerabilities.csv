DependencyName,DependencyPath,Description,License,Md5,Sha1,Identifiers,CPE,CVE,CWE,Vulnerability,Source,CVSSv2_Severity,CVSSv2_Score,CVSSv2,CVSSv3_BaseSeverity,CVSSv3_BaseScore,CVSSv3,CVSSv4_BaseSeverity,CVSSv4_BaseScore,CVSSv4,CPE Confidence,Evidence Count,VendorProject,Product,Name,DateAdded,ShortDescription,RequiredAction,DueDate,Notes
avro-1.8.2.jar (shaded: com.google.guava:guava:11.0.2),/home/runner/.m2/repository/org/apache/avro/avro/1.8.2/avro-1.8.2.jar/META-INF/maven/com.google.guava/guava/pom.xml,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      This project is a complete packaging of all the Guava libraries     into a single jar.  Individual portions of Guava can be used     by downloading the appropriate module and its dependencies.      Guava (complete) has only one code dependency - javax.annotation,     per the JSR-305 spec.",,07a0a23085fd6bbb576acc145ee549dc,906d56dcbd43343b6ca42188ae18ba98dc6c2fdf,pkg:maven/com.google.guava/guava@11.0.2,cpe:2.3:a:google:guava:11.0.2:*:*:*:*:*:*:*,CVE-2023-2976,CWE-552 Files or Directories Accessible to External Parties,"Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.  Even though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",NVD,,,,HIGH,7.1,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N/E:1.8/RC:R/MAV:A,,,,HIGH,9,,,,,,,,
avro-1.8.2.jar (shaded: com.google.guava:guava:11.0.2),/home/runner/.m2/repository/org/apache/avro/avro/1.8.2/avro-1.8.2.jar/META-INF/maven/com.google.guava/guava/pom.xml,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      This project is a complete packaging of all the Guava libraries     into a single jar.  Individual portions of Guava can be used     by downloading the appropriate module and its dependencies.      Guava (complete) has only one code dependency - javax.annotation,     per the JSR-305 spec.",,07a0a23085fd6bbb576acc145ee549dc,906d56dcbd43343b6ca42188ae18ba98dc6c2fdf,pkg:maven/com.google.guava/guava@11.0.2,cpe:2.3:a:google:guava:11.0.2:*:*:*:*:*:*:*,CVE-2018-10237,CWE-770 Allocation of Resources Without Limits or Throttling,"Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H/E:2.2/RC:R/MAV:A,,,,HIGH,9,,,,,,,,
avro-1.8.2.jar (shaded: com.google.guava:guava:11.0.2),/home/runner/.m2/repository/org/apache/avro/avro/1.8.2/avro-1.8.2.jar/META-INF/maven/com.google.guava/guava/pom.xml,"Guava is a suite of core and expanded libraries that include     utility classes, google's collections, io classes, and much     much more.      This project is a complete packaging of all the Guava libraries     into a single jar.  Individual portions of Guava can be used     by downloading the appropriate module and its dependencies.      Guava (complete) has only one code dependency - javax.annotation,     per the JSR-305 spec.",,07a0a23085fd6bbb576acc145ee549dc,906d56dcbd43343b6ca42188ae18ba98dc6c2fdf,pkg:maven/com.google.guava/guava@11.0.2,cpe:2.3:a:google:guava:11.0.2:*:*:*:*:*:*:*,CVE-2020-8908,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-732 Incorrect Permission Assignment for Critical Resource","A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",NVD,LOW,2.1,/AV:L/AC:L/Au:N/C:P/I:N/A:N,LOW,3.3,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N/E:1.8/RC:R/MAV:A,,,,HIGH,9,,,,,,,,
avro-1.8.2.jar (shaded: org.apache.avro:avro-guava-dependencies:1.8.2),/home/runner/.m2/repository/org/apache/avro/avro/1.8.2/avro-1.8.2.jar/META-INF/maven/org.apache.avro/avro-guava-dependencies/pom.xml,Temporary artifact of guava dependencies,,1117ab0e3aa409849f56cb09776d930e,23d4a56f8c32dbfd25bf866f626ebfa4a65e7fcf,pkg:maven/org.apache.avro/avro-guava-dependencies@1.8.2,cpe:2.3:a:avro_project:avro:1.8.2:*:*:*:*:*:*:*,CVE-2023-37475,CWE-400 Uncontrolled Resource Consumption,Hamba avro is a go lang encoder/decoder implementation of the avro codec specification. In affected versions a well-crafted string passed to avro's `github.com/hamba/avro/v2.Unmarshal()` can throw a `fatal error: runtime: out of memory` which is unrecoverable and can cause denial of service of the consumer of avro. The root cause of the issue is that avro uses part of the input to `Unmarshal()` to determine the size when creating a new slice and hence an attacker may consume arbitrary amounts of memory which in turn may cause the application to crash. This issue has been addressed in commit `b4a402f4` which has been included in release version `2.13.0`. Users are advised to upgrade. There are no known workarounds for this vulnerability.,NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,11,,,,,,,,
avro-1.8.2.jar,/home/runner/.m2/repository/org/apache/avro/avro/1.8.2/avro-1.8.2.jar,Avro core components,http://www.apache.org/licenses/LICENSE-2.0.txt,10395e5a571e1a1f6113411f276d2fea,91e3146dfff4bd510181032c8276a3a0130c0697,pkg:maven/org.apache.avro/avro@1.8.2,,CVE-2024-47561,CWE-502 Deserialization of Untrusted Data,"Schema parsing in the Java SDK of Apache Avro 1.11.3 and previous versions allows bad actors to execute arbitrary code. Users are recommended to upgrade to version 1.11.4Â  or 1.12.0, which fix this issue.",OSSINDEX,HIGH,9.300000190734863,CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N,,,,,,,HIGH,30,,,,,,,,
avro-1.8.2.jar,/home/runner/.m2/repository/org/apache/avro/avro/1.8.2/avro-1.8.2.jar,Avro core components,http://www.apache.org/licenses/LICENSE-2.0.txt,10395e5a571e1a1f6113411f276d2fea,91e3146dfff4bd510181032c8276a3a0130c0697,pkg:maven/org.apache.avro/avro@1.8.2,,CVE-2023-39410,CWE-502 Deserialization of Untrusted Data,"When deserializing untrusted or corrupted data, it is possible for a reader to consume memory beyond the allowed constraints and thus lead to out of memory on the system.  This issue affects Java applications using Apache Avro Java SDK up to and including 1.11.2.  Users should update to apache-avro version 1.11.3 which addresses this issue.",OSSINDEX,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,,,,HIGH,30,,,,,,,,
clojure-1.10.0.jar,/home/runner/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar,Clojure core environment and runtime library.,Eclipse Public License 1.0: http://opensource.org/licenses/eclipse-1.0.php,7c506484bc48541ffa5dcb4d9366a8a2,0383381021e03691dff101a9b12accb79e9a4e10,pkg:maven/org.clojure/clojure@1.10.0,cpe:2.3:a:clojure:clojure:1.10.0:*:*:*:*:*:*:*,CVE-2024-22871,CWE-502 Deserialization of Untrusted Data,An issue in Clojure versions 1.20 to 1.12.0-alpha5 allows an attacker to cause a denial of service (DoS) via the clojure.core$partial$fn__5920 function.  Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-22871 for details,OSSINDEX,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,,,,HIGH,21,,,,,,,,
commons-compress-1.8.1.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar,"Apache Commons Compress software defines an API for working with compression and archive formats. These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress and ar, cpio, jar, tar, zip, dump, 7z, arj.",http://www.apache.org/licenses/LICENSE-2.0.txt,d862e30ff6b5d78264677dcd6507abb8,a698750c16740fd5b3871425f4cb3bbaa87f529d,pkg:maven/org.apache.commons/commons-compress@1.8.1,cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*,CVE-2021-35515,"CWE-834 Excessive Iteration, CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop')","When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,79,,,,,,,,
commons-compress-1.8.1.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar,"Apache Commons Compress software defines an API for working with compression and archive formats. These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress and ar, cpio, jar, tar, zip, dump, 7z, arj.",http://www.apache.org/licenses/LICENSE-2.0.txt,d862e30ff6b5d78264677dcd6507abb8,a698750c16740fd5b3871425f4cb3bbaa87f529d,pkg:maven/org.apache.commons/commons-compress@1.8.1,cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*,CVE-2021-35516,"CWE-130 Improper Handling of Length Parameter Inconsistency, CWE-770 Allocation of Resources Without Limits or Throttling","When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,79,,,,,,,,
commons-compress-1.8.1.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar,"Apache Commons Compress software defines an API for working with compression and archive formats. These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress and ar, cpio, jar, tar, zip, dump, 7z, arj.",http://www.apache.org/licenses/LICENSE-2.0.txt,d862e30ff6b5d78264677dcd6507abb8,a698750c16740fd5b3871425f4cb3bbaa87f529d,pkg:maven/org.apache.commons/commons-compress@1.8.1,cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*,CVE-2021-35517,"CWE-130 Improper Handling of Length Parameter Inconsistency, CWE-770 Allocation of Resources Without Limits or Throttling","When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,79,,,,,,,,
commons-compress-1.8.1.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar,"Apache Commons Compress software defines an API for working with compression and archive formats. These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress and ar, cpio, jar, tar, zip, dump, 7z, arj.",http://www.apache.org/licenses/LICENSE-2.0.txt,d862e30ff6b5d78264677dcd6507abb8,a698750c16740fd5b3871425f4cb3bbaa87f529d,pkg:maven/org.apache.commons/commons-compress@1.8.1,cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*,CVE-2021-36090,"CWE-130 Improper Handling of Length Parameter Inconsistency, NVD-CWE-Other","When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,79,,,,,,,,
commons-compress-1.8.1.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar,"Apache Commons Compress software defines an API for working with compression and archive formats. These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress and ar, cpio, jar, tar, zip, dump, 7z, arj.",http://www.apache.org/licenses/LICENSE-2.0.txt,d862e30ff6b5d78264677dcd6507abb8,a698750c16740fd5b3871425f4cb3bbaa87f529d,pkg:maven/org.apache.commons/commons-compress@1.8.1,cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*,CVE-2018-11771,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),"When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:N/A:P,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:1.8/RC:R/MAV:A,,,,HIGH,79,,,,,,,,
commons-compress-1.8.1.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar,"Apache Commons Compress software defines an API for working with compression and archive formats. These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress and ar, cpio, jar, tar, zip, dump, 7z, arj.",http://www.apache.org/licenses/LICENSE-2.0.txt,d862e30ff6b5d78264677dcd6507abb8,a698750c16740fd5b3871425f4cb3bbaa87f529d,pkg:maven/org.apache.commons/commons-compress@1.8.1,cpe:2.3:a:apache:commons_compress:1.8.1:*:*:*:*:*:*:*,CVE-2024-25710,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0.  Users are recommended to upgrade to version 1.26.0 which fixes the issue.,NVD,,,,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:1.8/RC:R/MAV:A,,,,HIGH,79,,,,,,,,
jackson-mapper-asl-1.9.13.jar,/home/runner/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar,Data Mapper package is a high-performance data binding package built on Jackson JSON processor,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1750f9c339352fc4b728d61b57171613,1ee2f2bed0e5dd29d1cb155a166e6f8d50bbddb7,pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.13,cpe:2.3:a:fasterxml:jackson-mapper-asl:1.9.13:*:*:*:*:*:*:*,CVE-2017-7525,CWE-184 Incomplete List of Disallowed Inputs,"A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.  Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7525 for details",OSSINDEX,,,,CRITICAL,9.800000190734863,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,,,,HIGH,35,,,,,,,,
jackson-mapper-asl-1.9.13.jar,/home/runner/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar,Data Mapper package is a high-performance data binding package built on Jackson JSON processor,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",1750f9c339352fc4b728d61b57171613,1ee2f2bed0e5dd29d1cb155a166e6f8d50bbddb7,pkg:maven/org.codehaus.jackson/jackson-mapper-asl@1.9.13,cpe:2.3:a:fasterxml:jackson-mapper-asl:1.9.13:*:*:*:*:*:*:*,CVE-2019-10172,CWE-611 Improper Restriction of XML External Entity Reference,A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:P/A:N,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N/E:3.9/RC:R/MAV:A,,,,HIGH,35,,,,,,,,
snappy-java-1.1.1.3.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.1.3/snappy-java-1.1.1.3.jar,snappy-java: A fast compression/decompression library,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",a73387268491e264935ea46e49011ed0,fbd7b0b8400ebd0d6a2c61493f39530a93d9c4b6,pkg:maven/org.xerial.snappy/snappy-java@1.1.1.3,cpe:2.3:a:xerial:snappy-java:1.1.1.3:*:*:*:*:*:*:*,CVE-2023-34453,CWE-190 Integer Overflow or Wraparound,"snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error.  The function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`.  The same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.  Version 1.1.10.1 contains a patch for this vulnerability.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,36,,,,,,,,
snappy-java-1.1.1.3.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.1.3/snappy-java-1.1.1.3.jar,snappy-java: A fast compression/decompression library,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",a73387268491e264935ea46e49011ed0,fbd7b0b8400ebd0d6a2c61493f39530a93d9c4b6,pkg:maven/org.xerial.snappy/snappy-java@1.1.1.3,cpe:2.3:a:xerial:snappy-java:1.1.1.3:*:*:*:*:*:*:*,CVE-2023-34454,CWE-190 Integer Overflow or Wraparound,"snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error.  The function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function.  Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.  Since the maxCompressedLength function treats the length as an unsigned integer, it doesnât care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.  The same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely wonât occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.  Version 1.1.10.1 contains a patch for this issue.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,36,,,,,,,,
snappy-java-1.1.1.3.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.1.3/snappy-java-1.1.1.3.jar,snappy-java: A fast compression/decompression library,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",a73387268491e264935ea46e49011ed0,fbd7b0b8400ebd0d6a2c61493f39530a93d9c4b6,pkg:maven/org.xerial.snappy/snappy-java@1.1.1.3,cpe:2.3:a:xerial:snappy-java:1.1.1.3:*:*:*:*:*:*:*,CVE-2023-34455,CWE-770 Allocation of Resources Without Limits or Throttling,"snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1.  The code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasnât possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.  In the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesnât test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error.  Version 1.1.10.1 contains a patch for this issue.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,36,,,,,,,,
snappy-java-1.1.1.3.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.1.3/snappy-java-1.1.1.3.jar,snappy-java: A fast compression/decompression library,"The Apache Software License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt",a73387268491e264935ea46e49011ed0,fbd7b0b8400ebd0d6a2c61493f39530a93d9c4b6,pkg:maven/org.xerial.snappy/snappy-java@1.1.1.3,cpe:2.3:a:xerial:snappy-java:1.1.1.3:*:*:*:*:*:*:*,CVE-2023-43642,CWE-770 Allocation of Resources Without Limits or Throttling,"snappy-java is a Java port of the snappy, a fast C++ compresser/decompresser developed by Google. The SnappyInputStream was found to be vulnerable to Denial of Service (DoS) attacks when decompressing data with a too large chunk size. Due to missing upper bound check on chunk length, an unrecoverable fatal error can occur. All versions of snappy-java including the latest released version 1.1.10.3 are vulnerable to this issue. A fix has been introduced in commit `9f8c3cf74` which will be included in the 1.1.10.4 release. Users are advised to upgrade. Users unable to upgrade should only accept compressed data from trusted sources.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,,,,HIGH,36,,,,,,,,
