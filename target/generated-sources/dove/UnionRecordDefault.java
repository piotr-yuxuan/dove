/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package dove;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UnionRecordDefault extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4680886692547260421L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UnionRecordDefault\",\"namespace\":\"dove\",\"fields\":[{\"name\":\"nullBoolean\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"booleanNull\",\"type\":[\"boolean\",\"null\"],\"default\":false},{\"name\":\"booleanInt\",\"type\":[\"boolean\",\"int\"],\"default\":true},{\"name\":\"intBoolean\",\"type\":[\"int\",\"boolean\"],\"default\":0},{\"name\":\"intBytes\",\"type\":[\"int\",\"bytes\"],\"default\":1},{\"name\":\"bytesInt\",\"type\":[\"bytes\",\"int\"],\"default\":\"쫾\"},{\"name\":\"stringLong\",\"type\":[\"string\",\"long\"],\"default\":\"\"},{\"name\":\"longString\",\"type\":[\"long\",\"string\"],\"default\":2.3},{\"name\":\"someEnumDouble\",\"type\":[{\"type\":\"enum\",\"name\":\"SomeEnum\",\"symbols\":[\"ONE\",\"Two\",\"three\"]},\"double\"],\"default\":\"ONE\"},{\"name\":\"doubleSomeEnum\",\"type\":[\"double\",\"SomeEnum\"],\"default\":4.5},{\"name\":\"fixed8Float\",\"type\":[{\"type\":\"fixed\",\"name\":\"Fixed8\",\"size\":8},\"float\"],\"default\":\"쫾쫾쫾쫾쫾쫾쫾쫾\"},{\"name\":\"floatFixed8\",\"type\":[\"float\",\"Fixed8\"],\"default\":6.7},{\"name\":\"parentRecordEmptyRecord\",\"type\":[{\"type\":\"record\",\"name\":\"ParentRecord\",\"fields\":[{\"name\":\"child\",\"type\":{\"type\":\"record\",\"name\":\"PrimitiveTypes\",\"fields\":[{\"name\":\"aNull\",\"type\":\"null\"},{\"name\":\"aBoolean\",\"type\":\"boolean\"},{\"name\":\"aInt\",\"type\":\"int\"},{\"name\":\"aLong\",\"type\":\"long\"},{\"name\":\"aFloat\",\"type\":\"float\"},{\"name\":\"aDouble\",\"type\":\"double\"},{\"name\":\"aBytes\",\"type\":\"bytes\"},{\"name\":\"aString\",\"type\":\"string\"}]}}]},{\"type\":\"record\",\"name\":\"EmptyRecord\",\"fields\":[]}]},{\"name\":\"emptyRecordParentRecord\",\"type\":[\"EmptyRecord\",\"ParentRecord\"],\"default\":{}},{\"name\":\"nullSomeEnumCardSuitFixed8Fixed16Int\",\"type\":[\"null\",\"SomeEnum\",{\"type\":\"enum\",\"name\":\"CardSuit\",\"symbols\":[\"CLUB\",\"DIAMOND\",\"HEART\",\"SPADE\"]},\"Fixed8\",{\"type\":\"fixed\",\"name\":\"Fixed16\",\"size\":16},\"int\"],\"default\":null},{\"name\":\"someEnumCardSuitFixed8Fixed16IntNull\",\"type\":[\"SomeEnum\",\"CardSuit\",\"Fixed8\",\"Fixed16\",\"int\",\"null\"],\"default\":\"Two\"},{\"name\":\"cardSuitfixed8Fixed16IntNullSomeEnum\",\"type\":[\"CardSuit\",\"Fixed8\",\"Fixed16\",\"int\",\"null\",\"SomeEnum\"],\"default\":\"DIAMOND\"},{\"name\":\"fixed8Fixed16IntNullSomeEnumCardSuit\",\"type\":[\"Fixed8\",\"Fixed16\",\"int\",\"null\",\"SomeEnum\",\"CardSuit\"],\"default\":\"쫾쫾쫾쫾쫾쫾쫾쫾\"},{\"name\":\"fixed16IntNullSomeEnumCardSuitFixed8\",\"type\":[\"Fixed16\",\"int\",\"null\",\"SomeEnum\",\"CardSuit\",\"Fixed8\"],\"default\":\"쫾쫾쫾쫾쫾쫾쫾쫾쫾쫾쫾쫾쫾쫾쫾쫾\"},{\"name\":\"intNullSomeEnumCardSuitFixed8Fixed16\",\"type\":[\"int\",\"null\",\"SomeEnum\",\"CardSuit\",\"Fixed8\",\"Fixed16\"],\"default\":8}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UnionRecordDefault> ENCODER =
      new BinaryMessageEncoder<UnionRecordDefault>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UnionRecordDefault> DECODER =
      new BinaryMessageDecoder<UnionRecordDefault>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<UnionRecordDefault> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<UnionRecordDefault> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UnionRecordDefault>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this UnionRecordDefault to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a UnionRecordDefault from a ByteBuffer. */
  public static UnionRecordDefault fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Boolean nullBoolean;
  @Deprecated public java.lang.Boolean booleanNull;
  @Deprecated public java.lang.Object booleanInt;
  @Deprecated public java.lang.Object intBoolean;
  @Deprecated public java.lang.Object intBytes;
  @Deprecated public java.lang.Object bytesInt;
  @Deprecated public java.lang.Object stringLong;
  @Deprecated public java.lang.Object longString;
  @Deprecated public java.lang.Object someEnumDouble;
  @Deprecated public java.lang.Object doubleSomeEnum;
  @Deprecated public java.lang.Object fixed8Float;
  @Deprecated public java.lang.Object floatFixed8;
  @Deprecated public java.lang.Object parentRecordEmptyRecord;
  @Deprecated public java.lang.Object emptyRecordParentRecord;
  @Deprecated public java.lang.Object nullSomeEnumCardSuitFixed8Fixed16Int;
  @Deprecated public java.lang.Object someEnumCardSuitFixed8Fixed16IntNull;
  @Deprecated public java.lang.Object cardSuitfixed8Fixed16IntNullSomeEnum;
  @Deprecated public java.lang.Object fixed8Fixed16IntNullSomeEnumCardSuit;
  @Deprecated public java.lang.Object fixed16IntNullSomeEnumCardSuitFixed8;
  @Deprecated public java.lang.Object intNullSomeEnumCardSuitFixed8Fixed16;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UnionRecordDefault() {}

  /**
   * All-args constructor.
   * @param nullBoolean The new value for nullBoolean
   * @param booleanNull The new value for booleanNull
   * @param booleanInt The new value for booleanInt
   * @param intBoolean The new value for intBoolean
   * @param intBytes The new value for intBytes
   * @param bytesInt The new value for bytesInt
   * @param stringLong The new value for stringLong
   * @param longString The new value for longString
   * @param someEnumDouble The new value for someEnumDouble
   * @param doubleSomeEnum The new value for doubleSomeEnum
   * @param fixed8Float The new value for fixed8Float
   * @param floatFixed8 The new value for floatFixed8
   * @param parentRecordEmptyRecord The new value for parentRecordEmptyRecord
   * @param emptyRecordParentRecord The new value for emptyRecordParentRecord
   * @param nullSomeEnumCardSuitFixed8Fixed16Int The new value for nullSomeEnumCardSuitFixed8Fixed16Int
   * @param someEnumCardSuitFixed8Fixed16IntNull The new value for someEnumCardSuitFixed8Fixed16IntNull
   * @param cardSuitfixed8Fixed16IntNullSomeEnum The new value for cardSuitfixed8Fixed16IntNullSomeEnum
   * @param fixed8Fixed16IntNullSomeEnumCardSuit The new value for fixed8Fixed16IntNullSomeEnumCardSuit
   * @param fixed16IntNullSomeEnumCardSuitFixed8 The new value for fixed16IntNullSomeEnumCardSuitFixed8
   * @param intNullSomeEnumCardSuitFixed8Fixed16 The new value for intNullSomeEnumCardSuitFixed8Fixed16
   */
  public UnionRecordDefault(java.lang.Boolean nullBoolean, java.lang.Boolean booleanNull, java.lang.Object booleanInt, java.lang.Object intBoolean, java.lang.Object intBytes, java.lang.Object bytesInt, java.lang.Object stringLong, java.lang.Object longString, java.lang.Object someEnumDouble, java.lang.Object doubleSomeEnum, java.lang.Object fixed8Float, java.lang.Object floatFixed8, java.lang.Object parentRecordEmptyRecord, java.lang.Object emptyRecordParentRecord, java.lang.Object nullSomeEnumCardSuitFixed8Fixed16Int, java.lang.Object someEnumCardSuitFixed8Fixed16IntNull, java.lang.Object cardSuitfixed8Fixed16IntNullSomeEnum, java.lang.Object fixed8Fixed16IntNullSomeEnumCardSuit, java.lang.Object fixed16IntNullSomeEnumCardSuitFixed8, java.lang.Object intNullSomeEnumCardSuitFixed8Fixed16) {
    this.nullBoolean = nullBoolean;
    this.booleanNull = booleanNull;
    this.booleanInt = booleanInt;
    this.intBoolean = intBoolean;
    this.intBytes = intBytes;
    this.bytesInt = bytesInt;
    this.stringLong = stringLong;
    this.longString = longString;
    this.someEnumDouble = someEnumDouble;
    this.doubleSomeEnum = doubleSomeEnum;
    this.fixed8Float = fixed8Float;
    this.floatFixed8 = floatFixed8;
    this.parentRecordEmptyRecord = parentRecordEmptyRecord;
    this.emptyRecordParentRecord = emptyRecordParentRecord;
    this.nullSomeEnumCardSuitFixed8Fixed16Int = nullSomeEnumCardSuitFixed8Fixed16Int;
    this.someEnumCardSuitFixed8Fixed16IntNull = someEnumCardSuitFixed8Fixed16IntNull;
    this.cardSuitfixed8Fixed16IntNullSomeEnum = cardSuitfixed8Fixed16IntNullSomeEnum;
    this.fixed8Fixed16IntNullSomeEnumCardSuit = fixed8Fixed16IntNullSomeEnumCardSuit;
    this.fixed16IntNullSomeEnumCardSuitFixed8 = fixed16IntNullSomeEnumCardSuitFixed8;
    this.intNullSomeEnumCardSuitFixed8Fixed16 = intNullSomeEnumCardSuitFixed8Fixed16;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nullBoolean;
    case 1: return booleanNull;
    case 2: return booleanInt;
    case 3: return intBoolean;
    case 4: return intBytes;
    case 5: return bytesInt;
    case 6: return stringLong;
    case 7: return longString;
    case 8: return someEnumDouble;
    case 9: return doubleSomeEnum;
    case 10: return fixed8Float;
    case 11: return floatFixed8;
    case 12: return parentRecordEmptyRecord;
    case 13: return emptyRecordParentRecord;
    case 14: return nullSomeEnumCardSuitFixed8Fixed16Int;
    case 15: return someEnumCardSuitFixed8Fixed16IntNull;
    case 16: return cardSuitfixed8Fixed16IntNullSomeEnum;
    case 17: return fixed8Fixed16IntNullSomeEnumCardSuit;
    case 18: return fixed16IntNullSomeEnumCardSuitFixed8;
    case 19: return intNullSomeEnumCardSuitFixed8Fixed16;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nullBoolean = (java.lang.Boolean)value$; break;
    case 1: booleanNull = (java.lang.Boolean)value$; break;
    case 2: booleanInt = (java.lang.Object)value$; break;
    case 3: intBoolean = (java.lang.Object)value$; break;
    case 4: intBytes = (java.lang.Object)value$; break;
    case 5: bytesInt = (java.lang.Object)value$; break;
    case 6: stringLong = (java.lang.Object)value$; break;
    case 7: longString = (java.lang.Object)value$; break;
    case 8: someEnumDouble = (java.lang.Object)value$; break;
    case 9: doubleSomeEnum = (java.lang.Object)value$; break;
    case 10: fixed8Float = (java.lang.Object)value$; break;
    case 11: floatFixed8 = (java.lang.Object)value$; break;
    case 12: parentRecordEmptyRecord = (java.lang.Object)value$; break;
    case 13: emptyRecordParentRecord = (java.lang.Object)value$; break;
    case 14: nullSomeEnumCardSuitFixed8Fixed16Int = (java.lang.Object)value$; break;
    case 15: someEnumCardSuitFixed8Fixed16IntNull = (java.lang.Object)value$; break;
    case 16: cardSuitfixed8Fixed16IntNullSomeEnum = (java.lang.Object)value$; break;
    case 17: fixed8Fixed16IntNullSomeEnumCardSuit = (java.lang.Object)value$; break;
    case 18: fixed16IntNullSomeEnumCardSuitFixed8 = (java.lang.Object)value$; break;
    case 19: intNullSomeEnumCardSuitFixed8Fixed16 = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'nullBoolean' field.
   * @return The value of the 'nullBoolean' field.
   */
  public java.lang.Boolean getNullBoolean() {
    return nullBoolean;
  }

  /**
   * Sets the value of the 'nullBoolean' field.
   * @param value the value to set.
   */
  public void setNullBoolean(java.lang.Boolean value) {
    this.nullBoolean = value;
  }

  /**
   * Gets the value of the 'booleanNull' field.
   * @return The value of the 'booleanNull' field.
   */
  public java.lang.Boolean getBooleanNull() {
    return booleanNull;
  }

  /**
   * Sets the value of the 'booleanNull' field.
   * @param value the value to set.
   */
  public void setBooleanNull(java.lang.Boolean value) {
    this.booleanNull = value;
  }

  /**
   * Gets the value of the 'booleanInt' field.
   * @return The value of the 'booleanInt' field.
   */
  public java.lang.Object getBooleanInt() {
    return booleanInt;
  }

  /**
   * Sets the value of the 'booleanInt' field.
   * @param value the value to set.
   */
  public void setBooleanInt(java.lang.Object value) {
    this.booleanInt = value;
  }

  /**
   * Gets the value of the 'intBoolean' field.
   * @return The value of the 'intBoolean' field.
   */
  public java.lang.Object getIntBoolean() {
    return intBoolean;
  }

  /**
   * Sets the value of the 'intBoolean' field.
   * @param value the value to set.
   */
  public void setIntBoolean(java.lang.Object value) {
    this.intBoolean = value;
  }

  /**
   * Gets the value of the 'intBytes' field.
   * @return The value of the 'intBytes' field.
   */
  public java.lang.Object getIntBytes() {
    return intBytes;
  }

  /**
   * Sets the value of the 'intBytes' field.
   * @param value the value to set.
   */
  public void setIntBytes(java.lang.Object value) {
    this.intBytes = value;
  }

  /**
   * Gets the value of the 'bytesInt' field.
   * @return The value of the 'bytesInt' field.
   */
  public java.lang.Object getBytesInt() {
    return bytesInt;
  }

  /**
   * Sets the value of the 'bytesInt' field.
   * @param value the value to set.
   */
  public void setBytesInt(java.lang.Object value) {
    this.bytesInt = value;
  }

  /**
   * Gets the value of the 'stringLong' field.
   * @return The value of the 'stringLong' field.
   */
  public java.lang.Object getStringLong() {
    return stringLong;
  }

  /**
   * Sets the value of the 'stringLong' field.
   * @param value the value to set.
   */
  public void setStringLong(java.lang.Object value) {
    this.stringLong = value;
  }

  /**
   * Gets the value of the 'longString' field.
   * @return The value of the 'longString' field.
   */
  public java.lang.Object getLongString() {
    return longString;
  }

  /**
   * Sets the value of the 'longString' field.
   * @param value the value to set.
   */
  public void setLongString(java.lang.Object value) {
    this.longString = value;
  }

  /**
   * Gets the value of the 'someEnumDouble' field.
   * @return The value of the 'someEnumDouble' field.
   */
  public java.lang.Object getSomeEnumDouble() {
    return someEnumDouble;
  }

  /**
   * Sets the value of the 'someEnumDouble' field.
   * @param value the value to set.
   */
  public void setSomeEnumDouble(java.lang.Object value) {
    this.someEnumDouble = value;
  }

  /**
   * Gets the value of the 'doubleSomeEnum' field.
   * @return The value of the 'doubleSomeEnum' field.
   */
  public java.lang.Object getDoubleSomeEnum() {
    return doubleSomeEnum;
  }

  /**
   * Sets the value of the 'doubleSomeEnum' field.
   * @param value the value to set.
   */
  public void setDoubleSomeEnum(java.lang.Object value) {
    this.doubleSomeEnum = value;
  }

  /**
   * Gets the value of the 'fixed8Float' field.
   * @return The value of the 'fixed8Float' field.
   */
  public java.lang.Object getFixed8Float() {
    return fixed8Float;
  }

  /**
   * Sets the value of the 'fixed8Float' field.
   * @param value the value to set.
   */
  public void setFixed8Float(java.lang.Object value) {
    this.fixed8Float = value;
  }

  /**
   * Gets the value of the 'floatFixed8' field.
   * @return The value of the 'floatFixed8' field.
   */
  public java.lang.Object getFloatFixed8() {
    return floatFixed8;
  }

  /**
   * Sets the value of the 'floatFixed8' field.
   * @param value the value to set.
   */
  public void setFloatFixed8(java.lang.Object value) {
    this.floatFixed8 = value;
  }

  /**
   * Gets the value of the 'parentRecordEmptyRecord' field.
   * @return The value of the 'parentRecordEmptyRecord' field.
   */
  public java.lang.Object getParentRecordEmptyRecord() {
    return parentRecordEmptyRecord;
  }

  /**
   * Sets the value of the 'parentRecordEmptyRecord' field.
   * @param value the value to set.
   */
  public void setParentRecordEmptyRecord(java.lang.Object value) {
    this.parentRecordEmptyRecord = value;
  }

  /**
   * Gets the value of the 'emptyRecordParentRecord' field.
   * @return The value of the 'emptyRecordParentRecord' field.
   */
  public java.lang.Object getEmptyRecordParentRecord() {
    return emptyRecordParentRecord;
  }

  /**
   * Sets the value of the 'emptyRecordParentRecord' field.
   * @param value the value to set.
   */
  public void setEmptyRecordParentRecord(java.lang.Object value) {
    this.emptyRecordParentRecord = value;
  }

  /**
   * Gets the value of the 'nullSomeEnumCardSuitFixed8Fixed16Int' field.
   * @return The value of the 'nullSomeEnumCardSuitFixed8Fixed16Int' field.
   */
  public java.lang.Object getNullSomeEnumCardSuitFixed8Fixed16Int() {
    return nullSomeEnumCardSuitFixed8Fixed16Int;
  }

  /**
   * Sets the value of the 'nullSomeEnumCardSuitFixed8Fixed16Int' field.
   * @param value the value to set.
   */
  public void setNullSomeEnumCardSuitFixed8Fixed16Int(java.lang.Object value) {
    this.nullSomeEnumCardSuitFixed8Fixed16Int = value;
  }

  /**
   * Gets the value of the 'someEnumCardSuitFixed8Fixed16IntNull' field.
   * @return The value of the 'someEnumCardSuitFixed8Fixed16IntNull' field.
   */
  public java.lang.Object getSomeEnumCardSuitFixed8Fixed16IntNull() {
    return someEnumCardSuitFixed8Fixed16IntNull;
  }

  /**
   * Sets the value of the 'someEnumCardSuitFixed8Fixed16IntNull' field.
   * @param value the value to set.
   */
  public void setSomeEnumCardSuitFixed8Fixed16IntNull(java.lang.Object value) {
    this.someEnumCardSuitFixed8Fixed16IntNull = value;
  }

  /**
   * Gets the value of the 'cardSuitfixed8Fixed16IntNullSomeEnum' field.
   * @return The value of the 'cardSuitfixed8Fixed16IntNullSomeEnum' field.
   */
  public java.lang.Object getCardSuitfixed8Fixed16IntNullSomeEnum() {
    return cardSuitfixed8Fixed16IntNullSomeEnum;
  }

  /**
   * Sets the value of the 'cardSuitfixed8Fixed16IntNullSomeEnum' field.
   * @param value the value to set.
   */
  public void setCardSuitfixed8Fixed16IntNullSomeEnum(java.lang.Object value) {
    this.cardSuitfixed8Fixed16IntNullSomeEnum = value;
  }

  /**
   * Gets the value of the 'fixed8Fixed16IntNullSomeEnumCardSuit' field.
   * @return The value of the 'fixed8Fixed16IntNullSomeEnumCardSuit' field.
   */
  public java.lang.Object getFixed8Fixed16IntNullSomeEnumCardSuit() {
    return fixed8Fixed16IntNullSomeEnumCardSuit;
  }

  /**
   * Sets the value of the 'fixed8Fixed16IntNullSomeEnumCardSuit' field.
   * @param value the value to set.
   */
  public void setFixed8Fixed16IntNullSomeEnumCardSuit(java.lang.Object value) {
    this.fixed8Fixed16IntNullSomeEnumCardSuit = value;
  }

  /**
   * Gets the value of the 'fixed16IntNullSomeEnumCardSuitFixed8' field.
   * @return The value of the 'fixed16IntNullSomeEnumCardSuitFixed8' field.
   */
  public java.lang.Object getFixed16IntNullSomeEnumCardSuitFixed8() {
    return fixed16IntNullSomeEnumCardSuitFixed8;
  }

  /**
   * Sets the value of the 'fixed16IntNullSomeEnumCardSuitFixed8' field.
   * @param value the value to set.
   */
  public void setFixed16IntNullSomeEnumCardSuitFixed8(java.lang.Object value) {
    this.fixed16IntNullSomeEnumCardSuitFixed8 = value;
  }

  /**
   * Gets the value of the 'intNullSomeEnumCardSuitFixed8Fixed16' field.
   * @return The value of the 'intNullSomeEnumCardSuitFixed8Fixed16' field.
   */
  public java.lang.Object getIntNullSomeEnumCardSuitFixed8Fixed16() {
    return intNullSomeEnumCardSuitFixed8Fixed16;
  }

  /**
   * Sets the value of the 'intNullSomeEnumCardSuitFixed8Fixed16' field.
   * @param value the value to set.
   */
  public void setIntNullSomeEnumCardSuitFixed8Fixed16(java.lang.Object value) {
    this.intNullSomeEnumCardSuitFixed8Fixed16 = value;
  }

  /**
   * Creates a new UnionRecordDefault RecordBuilder.
   * @return A new UnionRecordDefault RecordBuilder
   */
  public static dove.UnionRecordDefault.Builder newBuilder() {
    return new dove.UnionRecordDefault.Builder();
  }

  /**
   * Creates a new UnionRecordDefault RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UnionRecordDefault RecordBuilder
   */
  public static dove.UnionRecordDefault.Builder newBuilder(dove.UnionRecordDefault.Builder other) {
    return new dove.UnionRecordDefault.Builder(other);
  }

  /**
   * Creates a new UnionRecordDefault RecordBuilder by copying an existing UnionRecordDefault instance.
   * @param other The existing instance to copy.
   * @return A new UnionRecordDefault RecordBuilder
   */
  public static dove.UnionRecordDefault.Builder newBuilder(dove.UnionRecordDefault other) {
    return new dove.UnionRecordDefault.Builder(other);
  }

  /**
   * RecordBuilder for UnionRecordDefault instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UnionRecordDefault>
    implements org.apache.avro.data.RecordBuilder<UnionRecordDefault> {

    private java.lang.Boolean nullBoolean;
    private java.lang.Boolean booleanNull;
    private java.lang.Object booleanInt;
    private java.lang.Object intBoolean;
    private java.lang.Object intBytes;
    private java.lang.Object bytesInt;
    private java.lang.Object stringLong;
    private java.lang.Object longString;
    private java.lang.Object someEnumDouble;
    private java.lang.Object doubleSomeEnum;
    private java.lang.Object fixed8Float;
    private java.lang.Object floatFixed8;
    private java.lang.Object parentRecordEmptyRecord;
    private java.lang.Object emptyRecordParentRecord;
    private java.lang.Object nullSomeEnumCardSuitFixed8Fixed16Int;
    private java.lang.Object someEnumCardSuitFixed8Fixed16IntNull;
    private java.lang.Object cardSuitfixed8Fixed16IntNullSomeEnum;
    private java.lang.Object fixed8Fixed16IntNullSomeEnumCardSuit;
    private java.lang.Object fixed16IntNullSomeEnumCardSuitFixed8;
    private java.lang.Object intNullSomeEnumCardSuitFixed8Fixed16;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(dove.UnionRecordDefault.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nullBoolean)) {
        this.nullBoolean = data().deepCopy(fields()[0].schema(), other.nullBoolean);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.booleanNull)) {
        this.booleanNull = data().deepCopy(fields()[1].schema(), other.booleanNull);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.booleanInt)) {
        this.booleanInt = data().deepCopy(fields()[2].schema(), other.booleanInt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.intBoolean)) {
        this.intBoolean = data().deepCopy(fields()[3].schema(), other.intBoolean);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.intBytes)) {
        this.intBytes = data().deepCopy(fields()[4].schema(), other.intBytes);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bytesInt)) {
        this.bytesInt = data().deepCopy(fields()[5].schema(), other.bytesInt);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stringLong)) {
        this.stringLong = data().deepCopy(fields()[6].schema(), other.stringLong);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.longString)) {
        this.longString = data().deepCopy(fields()[7].schema(), other.longString);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.someEnumDouble)) {
        this.someEnumDouble = data().deepCopy(fields()[8].schema(), other.someEnumDouble);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.doubleSomeEnum)) {
        this.doubleSomeEnum = data().deepCopy(fields()[9].schema(), other.doubleSomeEnum);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fixed8Float)) {
        this.fixed8Float = data().deepCopy(fields()[10].schema(), other.fixed8Float);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.floatFixed8)) {
        this.floatFixed8 = data().deepCopy(fields()[11].schema(), other.floatFixed8);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.parentRecordEmptyRecord)) {
        this.parentRecordEmptyRecord = data().deepCopy(fields()[12].schema(), other.parentRecordEmptyRecord);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.emptyRecordParentRecord)) {
        this.emptyRecordParentRecord = data().deepCopy(fields()[13].schema(), other.emptyRecordParentRecord);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.nullSomeEnumCardSuitFixed8Fixed16Int)) {
        this.nullSomeEnumCardSuitFixed8Fixed16Int = data().deepCopy(fields()[14].schema(), other.nullSomeEnumCardSuitFixed8Fixed16Int);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.someEnumCardSuitFixed8Fixed16IntNull)) {
        this.someEnumCardSuitFixed8Fixed16IntNull = data().deepCopy(fields()[15].schema(), other.someEnumCardSuitFixed8Fixed16IntNull);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.cardSuitfixed8Fixed16IntNullSomeEnum)) {
        this.cardSuitfixed8Fixed16IntNullSomeEnum = data().deepCopy(fields()[16].schema(), other.cardSuitfixed8Fixed16IntNullSomeEnum);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.fixed8Fixed16IntNullSomeEnumCardSuit)) {
        this.fixed8Fixed16IntNullSomeEnumCardSuit = data().deepCopy(fields()[17].schema(), other.fixed8Fixed16IntNullSomeEnumCardSuit);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.fixed16IntNullSomeEnumCardSuitFixed8)) {
        this.fixed16IntNullSomeEnumCardSuitFixed8 = data().deepCopy(fields()[18].schema(), other.fixed16IntNullSomeEnumCardSuitFixed8);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.intNullSomeEnumCardSuitFixed8Fixed16)) {
        this.intNullSomeEnumCardSuitFixed8Fixed16 = data().deepCopy(fields()[19].schema(), other.intNullSomeEnumCardSuitFixed8Fixed16);
        fieldSetFlags()[19] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UnionRecordDefault instance
     * @param other The existing instance to copy.
     */
    private Builder(dove.UnionRecordDefault other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.nullBoolean)) {
        this.nullBoolean = data().deepCopy(fields()[0].schema(), other.nullBoolean);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.booleanNull)) {
        this.booleanNull = data().deepCopy(fields()[1].schema(), other.booleanNull);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.booleanInt)) {
        this.booleanInt = data().deepCopy(fields()[2].schema(), other.booleanInt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.intBoolean)) {
        this.intBoolean = data().deepCopy(fields()[3].schema(), other.intBoolean);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.intBytes)) {
        this.intBytes = data().deepCopy(fields()[4].schema(), other.intBytes);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bytesInt)) {
        this.bytesInt = data().deepCopy(fields()[5].schema(), other.bytesInt);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stringLong)) {
        this.stringLong = data().deepCopy(fields()[6].schema(), other.stringLong);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.longString)) {
        this.longString = data().deepCopy(fields()[7].schema(), other.longString);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.someEnumDouble)) {
        this.someEnumDouble = data().deepCopy(fields()[8].schema(), other.someEnumDouble);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.doubleSomeEnum)) {
        this.doubleSomeEnum = data().deepCopy(fields()[9].schema(), other.doubleSomeEnum);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fixed8Float)) {
        this.fixed8Float = data().deepCopy(fields()[10].schema(), other.fixed8Float);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.floatFixed8)) {
        this.floatFixed8 = data().deepCopy(fields()[11].schema(), other.floatFixed8);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.parentRecordEmptyRecord)) {
        this.parentRecordEmptyRecord = data().deepCopy(fields()[12].schema(), other.parentRecordEmptyRecord);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.emptyRecordParentRecord)) {
        this.emptyRecordParentRecord = data().deepCopy(fields()[13].schema(), other.emptyRecordParentRecord);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.nullSomeEnumCardSuitFixed8Fixed16Int)) {
        this.nullSomeEnumCardSuitFixed8Fixed16Int = data().deepCopy(fields()[14].schema(), other.nullSomeEnumCardSuitFixed8Fixed16Int);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.someEnumCardSuitFixed8Fixed16IntNull)) {
        this.someEnumCardSuitFixed8Fixed16IntNull = data().deepCopy(fields()[15].schema(), other.someEnumCardSuitFixed8Fixed16IntNull);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.cardSuitfixed8Fixed16IntNullSomeEnum)) {
        this.cardSuitfixed8Fixed16IntNullSomeEnum = data().deepCopy(fields()[16].schema(), other.cardSuitfixed8Fixed16IntNullSomeEnum);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.fixed8Fixed16IntNullSomeEnumCardSuit)) {
        this.fixed8Fixed16IntNullSomeEnumCardSuit = data().deepCopy(fields()[17].schema(), other.fixed8Fixed16IntNullSomeEnumCardSuit);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.fixed16IntNullSomeEnumCardSuitFixed8)) {
        this.fixed16IntNullSomeEnumCardSuitFixed8 = data().deepCopy(fields()[18].schema(), other.fixed16IntNullSomeEnumCardSuitFixed8);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.intNullSomeEnumCardSuitFixed8Fixed16)) {
        this.intNullSomeEnumCardSuitFixed8Fixed16 = data().deepCopy(fields()[19].schema(), other.intNullSomeEnumCardSuitFixed8Fixed16);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'nullBoolean' field.
      * @return The value.
      */
    public java.lang.Boolean getNullBoolean() {
      return nullBoolean;
    }

    /**
      * Sets the value of the 'nullBoolean' field.
      * @param value The value of 'nullBoolean'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setNullBoolean(java.lang.Boolean value) {
      validate(fields()[0], value);
      this.nullBoolean = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'nullBoolean' field has been set.
      * @return True if the 'nullBoolean' field has been set, false otherwise.
      */
    public boolean hasNullBoolean() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nullBoolean' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearNullBoolean() {
      nullBoolean = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'booleanNull' field.
      * @return The value.
      */
    public java.lang.Boolean getBooleanNull() {
      return booleanNull;
    }

    /**
      * Sets the value of the 'booleanNull' field.
      * @param value The value of 'booleanNull'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setBooleanNull(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.booleanNull = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'booleanNull' field has been set.
      * @return True if the 'booleanNull' field has been set, false otherwise.
      */
    public boolean hasBooleanNull() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'booleanNull' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearBooleanNull() {
      booleanNull = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'booleanInt' field.
      * @return The value.
      */
    public java.lang.Object getBooleanInt() {
      return booleanInt;
    }

    /**
      * Sets the value of the 'booleanInt' field.
      * @param value The value of 'booleanInt'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setBooleanInt(java.lang.Object value) {
      validate(fields()[2], value);
      this.booleanInt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'booleanInt' field has been set.
      * @return True if the 'booleanInt' field has been set, false otherwise.
      */
    public boolean hasBooleanInt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'booleanInt' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearBooleanInt() {
      booleanInt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'intBoolean' field.
      * @return The value.
      */
    public java.lang.Object getIntBoolean() {
      return intBoolean;
    }

    /**
      * Sets the value of the 'intBoolean' field.
      * @param value The value of 'intBoolean'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setIntBoolean(java.lang.Object value) {
      validate(fields()[3], value);
      this.intBoolean = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'intBoolean' field has been set.
      * @return True if the 'intBoolean' field has been set, false otherwise.
      */
    public boolean hasIntBoolean() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'intBoolean' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearIntBoolean() {
      intBoolean = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'intBytes' field.
      * @return The value.
      */
    public java.lang.Object getIntBytes() {
      return intBytes;
    }

    /**
      * Sets the value of the 'intBytes' field.
      * @param value The value of 'intBytes'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setIntBytes(java.lang.Object value) {
      validate(fields()[4], value);
      this.intBytes = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'intBytes' field has been set.
      * @return True if the 'intBytes' field has been set, false otherwise.
      */
    public boolean hasIntBytes() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'intBytes' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearIntBytes() {
      intBytes = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'bytesInt' field.
      * @return The value.
      */
    public java.lang.Object getBytesInt() {
      return bytesInt;
    }

    /**
      * Sets the value of the 'bytesInt' field.
      * @param value The value of 'bytesInt'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setBytesInt(java.lang.Object value) {
      validate(fields()[5], value);
      this.bytesInt = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'bytesInt' field has been set.
      * @return True if the 'bytesInt' field has been set, false otherwise.
      */
    public boolean hasBytesInt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'bytesInt' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearBytesInt() {
      bytesInt = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'stringLong' field.
      * @return The value.
      */
    public java.lang.Object getStringLong() {
      return stringLong;
    }

    /**
      * Sets the value of the 'stringLong' field.
      * @param value The value of 'stringLong'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setStringLong(java.lang.Object value) {
      validate(fields()[6], value);
      this.stringLong = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'stringLong' field has been set.
      * @return True if the 'stringLong' field has been set, false otherwise.
      */
    public boolean hasStringLong() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'stringLong' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearStringLong() {
      stringLong = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'longString' field.
      * @return The value.
      */
    public java.lang.Object getLongString() {
      return longString;
    }

    /**
      * Sets the value of the 'longString' field.
      * @param value The value of 'longString'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setLongString(java.lang.Object value) {
      validate(fields()[7], value);
      this.longString = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'longString' field has been set.
      * @return True if the 'longString' field has been set, false otherwise.
      */
    public boolean hasLongString() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'longString' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearLongString() {
      longString = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'someEnumDouble' field.
      * @return The value.
      */
    public java.lang.Object getSomeEnumDouble() {
      return someEnumDouble;
    }

    /**
      * Sets the value of the 'someEnumDouble' field.
      * @param value The value of 'someEnumDouble'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setSomeEnumDouble(java.lang.Object value) {
      validate(fields()[8], value);
      this.someEnumDouble = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'someEnumDouble' field has been set.
      * @return True if the 'someEnumDouble' field has been set, false otherwise.
      */
    public boolean hasSomeEnumDouble() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'someEnumDouble' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearSomeEnumDouble() {
      someEnumDouble = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'doubleSomeEnum' field.
      * @return The value.
      */
    public java.lang.Object getDoubleSomeEnum() {
      return doubleSomeEnum;
    }

    /**
      * Sets the value of the 'doubleSomeEnum' field.
      * @param value The value of 'doubleSomeEnum'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setDoubleSomeEnum(java.lang.Object value) {
      validate(fields()[9], value);
      this.doubleSomeEnum = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'doubleSomeEnum' field has been set.
      * @return True if the 'doubleSomeEnum' field has been set, false otherwise.
      */
    public boolean hasDoubleSomeEnum() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'doubleSomeEnum' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearDoubleSomeEnum() {
      doubleSomeEnum = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'fixed8Float' field.
      * @return The value.
      */
    public java.lang.Object getFixed8Float() {
      return fixed8Float;
    }

    /**
      * Sets the value of the 'fixed8Float' field.
      * @param value The value of 'fixed8Float'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setFixed8Float(java.lang.Object value) {
      validate(fields()[10], value);
      this.fixed8Float = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'fixed8Float' field has been set.
      * @return True if the 'fixed8Float' field has been set, false otherwise.
      */
    public boolean hasFixed8Float() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'fixed8Float' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearFixed8Float() {
      fixed8Float = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'floatFixed8' field.
      * @return The value.
      */
    public java.lang.Object getFloatFixed8() {
      return floatFixed8;
    }

    /**
      * Sets the value of the 'floatFixed8' field.
      * @param value The value of 'floatFixed8'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setFloatFixed8(java.lang.Object value) {
      validate(fields()[11], value);
      this.floatFixed8 = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'floatFixed8' field has been set.
      * @return True if the 'floatFixed8' field has been set, false otherwise.
      */
    public boolean hasFloatFixed8() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'floatFixed8' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearFloatFixed8() {
      floatFixed8 = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentRecordEmptyRecord' field.
      * @return The value.
      */
    public java.lang.Object getParentRecordEmptyRecord() {
      return parentRecordEmptyRecord;
    }

    /**
      * Sets the value of the 'parentRecordEmptyRecord' field.
      * @param value The value of 'parentRecordEmptyRecord'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setParentRecordEmptyRecord(java.lang.Object value) {
      validate(fields()[12], value);
      this.parentRecordEmptyRecord = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'parentRecordEmptyRecord' field has been set.
      * @return True if the 'parentRecordEmptyRecord' field has been set, false otherwise.
      */
    public boolean hasParentRecordEmptyRecord() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'parentRecordEmptyRecord' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearParentRecordEmptyRecord() {
      parentRecordEmptyRecord = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'emptyRecordParentRecord' field.
      * @return The value.
      */
    public java.lang.Object getEmptyRecordParentRecord() {
      return emptyRecordParentRecord;
    }

    /**
      * Sets the value of the 'emptyRecordParentRecord' field.
      * @param value The value of 'emptyRecordParentRecord'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setEmptyRecordParentRecord(java.lang.Object value) {
      validate(fields()[13], value);
      this.emptyRecordParentRecord = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'emptyRecordParentRecord' field has been set.
      * @return True if the 'emptyRecordParentRecord' field has been set, false otherwise.
      */
    public boolean hasEmptyRecordParentRecord() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'emptyRecordParentRecord' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearEmptyRecordParentRecord() {
      emptyRecordParentRecord = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullSomeEnumCardSuitFixed8Fixed16Int' field.
      * @return The value.
      */
    public java.lang.Object getNullSomeEnumCardSuitFixed8Fixed16Int() {
      return nullSomeEnumCardSuitFixed8Fixed16Int;
    }

    /**
      * Sets the value of the 'nullSomeEnumCardSuitFixed8Fixed16Int' field.
      * @param value The value of 'nullSomeEnumCardSuitFixed8Fixed16Int'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setNullSomeEnumCardSuitFixed8Fixed16Int(java.lang.Object value) {
      validate(fields()[14], value);
      this.nullSomeEnumCardSuitFixed8Fixed16Int = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'nullSomeEnumCardSuitFixed8Fixed16Int' field has been set.
      * @return True if the 'nullSomeEnumCardSuitFixed8Fixed16Int' field has been set, false otherwise.
      */
    public boolean hasNullSomeEnumCardSuitFixed8Fixed16Int() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'nullSomeEnumCardSuitFixed8Fixed16Int' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearNullSomeEnumCardSuitFixed8Fixed16Int() {
      nullSomeEnumCardSuitFixed8Fixed16Int = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'someEnumCardSuitFixed8Fixed16IntNull' field.
      * @return The value.
      */
    public java.lang.Object getSomeEnumCardSuitFixed8Fixed16IntNull() {
      return someEnumCardSuitFixed8Fixed16IntNull;
    }

    /**
      * Sets the value of the 'someEnumCardSuitFixed8Fixed16IntNull' field.
      * @param value The value of 'someEnumCardSuitFixed8Fixed16IntNull'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setSomeEnumCardSuitFixed8Fixed16IntNull(java.lang.Object value) {
      validate(fields()[15], value);
      this.someEnumCardSuitFixed8Fixed16IntNull = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'someEnumCardSuitFixed8Fixed16IntNull' field has been set.
      * @return True if the 'someEnumCardSuitFixed8Fixed16IntNull' field has been set, false otherwise.
      */
    public boolean hasSomeEnumCardSuitFixed8Fixed16IntNull() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'someEnumCardSuitFixed8Fixed16IntNull' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearSomeEnumCardSuitFixed8Fixed16IntNull() {
      someEnumCardSuitFixed8Fixed16IntNull = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'cardSuitfixed8Fixed16IntNullSomeEnum' field.
      * @return The value.
      */
    public java.lang.Object getCardSuitfixed8Fixed16IntNullSomeEnum() {
      return cardSuitfixed8Fixed16IntNullSomeEnum;
    }

    /**
      * Sets the value of the 'cardSuitfixed8Fixed16IntNullSomeEnum' field.
      * @param value The value of 'cardSuitfixed8Fixed16IntNullSomeEnum'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setCardSuitfixed8Fixed16IntNullSomeEnum(java.lang.Object value) {
      validate(fields()[16], value);
      this.cardSuitfixed8Fixed16IntNullSomeEnum = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'cardSuitfixed8Fixed16IntNullSomeEnum' field has been set.
      * @return True if the 'cardSuitfixed8Fixed16IntNullSomeEnum' field has been set, false otherwise.
      */
    public boolean hasCardSuitfixed8Fixed16IntNullSomeEnum() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'cardSuitfixed8Fixed16IntNullSomeEnum' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearCardSuitfixed8Fixed16IntNullSomeEnum() {
      cardSuitfixed8Fixed16IntNullSomeEnum = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'fixed8Fixed16IntNullSomeEnumCardSuit' field.
      * @return The value.
      */
    public java.lang.Object getFixed8Fixed16IntNullSomeEnumCardSuit() {
      return fixed8Fixed16IntNullSomeEnumCardSuit;
    }

    /**
      * Sets the value of the 'fixed8Fixed16IntNullSomeEnumCardSuit' field.
      * @param value The value of 'fixed8Fixed16IntNullSomeEnumCardSuit'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setFixed8Fixed16IntNullSomeEnumCardSuit(java.lang.Object value) {
      validate(fields()[17], value);
      this.fixed8Fixed16IntNullSomeEnumCardSuit = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'fixed8Fixed16IntNullSomeEnumCardSuit' field has been set.
      * @return True if the 'fixed8Fixed16IntNullSomeEnumCardSuit' field has been set, false otherwise.
      */
    public boolean hasFixed8Fixed16IntNullSomeEnumCardSuit() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'fixed8Fixed16IntNullSomeEnumCardSuit' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearFixed8Fixed16IntNullSomeEnumCardSuit() {
      fixed8Fixed16IntNullSomeEnumCardSuit = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'fixed16IntNullSomeEnumCardSuitFixed8' field.
      * @return The value.
      */
    public java.lang.Object getFixed16IntNullSomeEnumCardSuitFixed8() {
      return fixed16IntNullSomeEnumCardSuitFixed8;
    }

    /**
      * Sets the value of the 'fixed16IntNullSomeEnumCardSuitFixed8' field.
      * @param value The value of 'fixed16IntNullSomeEnumCardSuitFixed8'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setFixed16IntNullSomeEnumCardSuitFixed8(java.lang.Object value) {
      validate(fields()[18], value);
      this.fixed16IntNullSomeEnumCardSuitFixed8 = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'fixed16IntNullSomeEnumCardSuitFixed8' field has been set.
      * @return True if the 'fixed16IntNullSomeEnumCardSuitFixed8' field has been set, false otherwise.
      */
    public boolean hasFixed16IntNullSomeEnumCardSuitFixed8() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'fixed16IntNullSomeEnumCardSuitFixed8' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearFixed16IntNullSomeEnumCardSuitFixed8() {
      fixed16IntNullSomeEnumCardSuitFixed8 = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'intNullSomeEnumCardSuitFixed8Fixed16' field.
      * @return The value.
      */
    public java.lang.Object getIntNullSomeEnumCardSuitFixed8Fixed16() {
      return intNullSomeEnumCardSuitFixed8Fixed16;
    }

    /**
      * Sets the value of the 'intNullSomeEnumCardSuitFixed8Fixed16' field.
      * @param value The value of 'intNullSomeEnumCardSuitFixed8Fixed16'.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder setIntNullSomeEnumCardSuitFixed8Fixed16(java.lang.Object value) {
      validate(fields()[19], value);
      this.intNullSomeEnumCardSuitFixed8Fixed16 = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'intNullSomeEnumCardSuitFixed8Fixed16' field has been set.
      * @return True if the 'intNullSomeEnumCardSuitFixed8Fixed16' field has been set, false otherwise.
      */
    public boolean hasIntNullSomeEnumCardSuitFixed8Fixed16() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'intNullSomeEnumCardSuitFixed8Fixed16' field.
      * @return This builder.
      */
    public dove.UnionRecordDefault.Builder clearIntNullSomeEnumCardSuitFixed8Fixed16() {
      intNullSomeEnumCardSuitFixed8Fixed16 = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UnionRecordDefault build() {
      try {
        UnionRecordDefault record = new UnionRecordDefault();
        record.nullBoolean = fieldSetFlags()[0] ? this.nullBoolean : (java.lang.Boolean) defaultValue(fields()[0]);
        record.booleanNull = fieldSetFlags()[1] ? this.booleanNull : (java.lang.Boolean) defaultValue(fields()[1]);
        record.booleanInt = fieldSetFlags()[2] ? this.booleanInt : (java.lang.Object) defaultValue(fields()[2]);
        record.intBoolean = fieldSetFlags()[3] ? this.intBoolean : (java.lang.Object) defaultValue(fields()[3]);
        record.intBytes = fieldSetFlags()[4] ? this.intBytes : (java.lang.Object) defaultValue(fields()[4]);
        record.bytesInt = fieldSetFlags()[5] ? this.bytesInt : (java.lang.Object) defaultValue(fields()[5]);
        record.stringLong = fieldSetFlags()[6] ? this.stringLong : (java.lang.Object) defaultValue(fields()[6]);
        record.longString = fieldSetFlags()[7] ? this.longString : (java.lang.Object) defaultValue(fields()[7]);
        record.someEnumDouble = fieldSetFlags()[8] ? this.someEnumDouble : (java.lang.Object) defaultValue(fields()[8]);
        record.doubleSomeEnum = fieldSetFlags()[9] ? this.doubleSomeEnum : (java.lang.Object) defaultValue(fields()[9]);
        record.fixed8Float = fieldSetFlags()[10] ? this.fixed8Float : (java.lang.Object) defaultValue(fields()[10]);
        record.floatFixed8 = fieldSetFlags()[11] ? this.floatFixed8 : (java.lang.Object) defaultValue(fields()[11]);
        record.parentRecordEmptyRecord = fieldSetFlags()[12] ? this.parentRecordEmptyRecord : (java.lang.Object) defaultValue(fields()[12]);
        record.emptyRecordParentRecord = fieldSetFlags()[13] ? this.emptyRecordParentRecord : (java.lang.Object) defaultValue(fields()[13]);
        record.nullSomeEnumCardSuitFixed8Fixed16Int = fieldSetFlags()[14] ? this.nullSomeEnumCardSuitFixed8Fixed16Int : (java.lang.Object) defaultValue(fields()[14]);
        record.someEnumCardSuitFixed8Fixed16IntNull = fieldSetFlags()[15] ? this.someEnumCardSuitFixed8Fixed16IntNull : (java.lang.Object) defaultValue(fields()[15]);
        record.cardSuitfixed8Fixed16IntNullSomeEnum = fieldSetFlags()[16] ? this.cardSuitfixed8Fixed16IntNullSomeEnum : (java.lang.Object) defaultValue(fields()[16]);
        record.fixed8Fixed16IntNullSomeEnumCardSuit = fieldSetFlags()[17] ? this.fixed8Fixed16IntNullSomeEnumCardSuit : (java.lang.Object) defaultValue(fields()[17]);
        record.fixed16IntNullSomeEnumCardSuitFixed8 = fieldSetFlags()[18] ? this.fixed16IntNullSomeEnumCardSuitFixed8 : (java.lang.Object) defaultValue(fields()[18]);
        record.intNullSomeEnumCardSuitFixed8Fixed16 = fieldSetFlags()[19] ? this.intNullSomeEnumCardSuitFixed8Fixed16 : (java.lang.Object) defaultValue(fields()[19]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UnionRecordDefault>
    WRITER$ = (org.apache.avro.io.DatumWriter<UnionRecordDefault>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UnionRecordDefault>
    READER$ = (org.apache.avro.io.DatumReader<UnionRecordDefault>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
